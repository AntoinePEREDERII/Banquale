kind: pipeline
type: docker
name: myFirstPipeline

trigger:
  branch:
    - master
    - C#/model
  event:
    - push


#steps:
#  #- name: build
#    #image: mcr.microsoft.com/dotnet/sdk:6.0
#    #commands:
#      #- cd src/Banquale
#        #- dotnet restore Banquale.sln
#        #- dotnet build Banquale.sln -c Debug --no-restore /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/33.0.0
#        #- dotnet publish Banquale/Banquale.csproj -c Release --no-restore -o $CI_PROJECT_DIR/build/release -f:net6.0-android /p:AndroidSdkDirectory=/usr/lib/android-sdk
#      # this last line can be replaced by the following one, if you have only one project in your Banquale:
#      #- dotnet publish Banquale.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release -f:net7.0-android /p:AndroidSdkDirectory=/usr/lib/android-sdk

steps:
  - name: build
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet7-maui:latest
    volumes:
      - name: Documentation
        path: /Documentation
    commands:
      - cd src/Banquale/
#      - workload restore
      - dotnet restore Banquale.sln
      - dotnet build Banquale.sln -c Release --no-restore /p:AndroidSdkDirectory=$ANDROID_SDK_ROOT -property:Aapt2ToolPath=$ANDROID_SDK_ROOT/build-tools/33.0.0
      - dotnet publish Banquale.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release -f:net7.0-android /p:AndroidSdkDirectory=/usr/lib/android-sdk

  - name: tests
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet7-maui:latest
    commands:
      - cd src/Banquale/
      - dotnet restore Banquale.sln
      - dotnet test Banquale.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dronesonarplugin-dotnet7
    commands:
      - cd src/Banquale/
      - dotnet restore Banquale.sln
      - dotnet sonarscanner begin /k:TestCI /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
      - dotnet build Banquale.sln -c Release --no-restore
      - dotnet test Banquale.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish Banquale.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
      # accessible en ligne de commande par ${PLUGIN_SONAR_HOST}
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      # accessible en ligne de commande par ${PLUGIN_SONAR_TOKEN}
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
    depends_on: [tests]

  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: Documentation
        path: /Documentation
    commands:
      - cd Documentation/doxygen
      - doxygen Doxyfile
      - /entrypoint.sh
    when:
      branch:
        - master
      event:
        - push
        - pull_request
    depends_on: [ build, tests ]

volumes:
- name: docs
  temp: {}
